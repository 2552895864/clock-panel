{"version":3,"sources":["../src/clock_ctrl.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ;;AACD;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGD,sBAAgB;AACpB,cAAM,MAAN;AACA,mBAAW,SAAX;AACA,uBAAe,IAAf;AACA,iBAAS,IAAT;AACA,0BAAkB,IAAlB;AACA,sBAAc;AACZ,oBAAU,IAAV;AACA,sBAAY,YAAZ;AACA,oBAAU,MAAV;AACA,sBAAY,QAAZ;SAJF;AAMA,sBAAc;AACZ,oBAAU,MAAV;AACA,sBAAY,QAAZ;SAFF;;;2BAMW;;;AACX,iBADW,SACX,CAAY,MAAZ,EAAoB,SAApB,EAA+B;gCADpB,WACoB;;6EADpB,sBAEH,QAAQ,YADe;;AAE7B,YAAE,QAAF,CAAW,MAAK,KAAL,EAAY,aAAvB,EAF6B;;AAI7B,gBAAK,WAAL,GAJ6B;;SAA/B;;qBADW;;wCAQG;;;AACZ,gBAAI,KAAK,KAAL,CAAW,IAAX,KAAoB,MAApB,EAA4B;AAC9B,mBAAK,UAAL,GAD8B;aAAhC,MAEO;AACL,mBAAK,eAAL,GADK;aAFP;AAKA,iBAAK,QAAL,CAAc,YAAM;AAAE,qBAAK,WAAL,GAAF;aAAN,EAA+B,IAA7C,EANY;;;;uCASD;AACX,gBAAI,YAAJ,CADW;AAEX,gBAAI,KAAK,KAAL,CAAW,aAAX,EAA0B;AAC5B,oBAAM,SAAS,SAAT,CAAmB,SAAS,KAAK,KAAL,CAAW,aAAX,EAA0B,EAAnC,CAAnB,CAAN,CAD4B;aAA9B,MAEO;AACL,oBAAM,QAAN,CADK;aAFP;;AAMA,gBAAI,KAAK,KAAL,CAAW,YAAX,CAAwB,QAAxB,EAAkC;AACpC,mBAAK,IAAL,GAAY,IAAI,MAAJ,CAAW,KAAK,KAAL,CAAW,YAAX,CAAwB,UAAxB,CAAvB,CADoC;aAAtC;AAGA,iBAAK,IAAL,GAAY,KAAK,KAAL,CAAW,SAAX,KAAyB,SAAzB,GAAqC,IAAI,MAAJ,CAAW,UAAX,CAArC,GAA8D,IAAI,MAAJ,CAAW,YAAX,CAA9D,CAXD;;;;4CAcK;AAChB,gBAAI,CAAC,KAAK,KAAL,CAAW,gBAAX,EAA6B;AAChC,mBAAK,IAAL,GAAY,UAAZ,CADgC;aAAlC;;AAIA,gBAAM,MAAM,QAAN,CALU;AAMhB,gBAAM,WAAW,OAAO,QAAP,CAAgB,OAAO,KAAK,KAAL,CAAW,gBAAX,CAAP,CAAoC,IAApC,CAAyC,GAAzC,CAAhB,CAAX,CANU;AAOhB,gBAAM,oBAAoB,OAAO,GAAP,CAAW,SAAS,cAAT,EAAX,EAAsC,MAAtC,CAA6C,UAA7C,CAApB,CAPU;;AAShB,gBAAI,SAAS,MAAT,KAAoB,CAApB,EAAuB;AACzB,mBAAK,IAAL,GAAY,SAAS,IAAT,KAAkB,QAAlB,GAA6B,iBAA7B,CADa;aAA3B,MAEO,IAAI,SAAS,SAAT,KAAuB,CAAvB,EAA0B;AACnC,mBAAK,IAAL,GAAY,iBAAZ,CADmC;aAA9B,MAEA;AACL,mBAAK,IAAL,GAAY,UAAZ,CADK;aAFA;;;;yCAOM;AACb,uCAlDS,sDAkDT,CADa;AAEb,iBAAK,YAAL,CAAkB,SAAlB,EAA6B,gDAA7B,EAA+E,CAA/E,EAFa;;;;eAjDJ;QAAkB;;;;AAuD/B,gBAAU,WAAV,GAAwB,aAAxB","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport './css/clock-panel.css!';\n\nconst panelDefaults = {\n  mode: 'time',\n  clockType: '24 hour',\n  offsetFromUtc: null,\n  bgColor: null,\n  endCountdownTime: null,\n  dateSettings: {\n    showDate: true,\n    dateFormat: 'YYYY-MM-DD',\n    fontSize: '20px',\n    fontWeight: 'normal'\n  },\n  timeSettings: {\n    fontSize: '60px',\n    fontWeight: 'normal'\n  }\n};\n\nexport class ClockCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.updateClock();\n  }\n\n  updateClock() {\n    if (this.panel.mode === 'time') {\n      this.renderTime();\n    } else {\n      this.renderCountdown();\n    }\n    this.$timeout(() => { this.updateClock(); }, 1000);\n  }\n\n  renderTime() {\n    let now;\n    if (this.panel.offsetFromUtc) {\n      now = moment().utcOffset(parseInt(this.panel.offsetFromUtc, 10));\n    } else {\n      now = moment();\n    }\n\n    if (this.panel.dateSettings.showDate) {\n      this.date = now.format(this.panel.dateSettings.dateFormat);\n    }\n    this.time = this.panel.clockType === '24 hour' ? now.format('HH:mm:ss') : now.format('hh:mm:ss A');\n  }\n\n  renderCountdown() {\n    if (!this.panel.endCountdownTime) {\n      this.time = '00:00:00';\n    }\n\n    const now = moment();\n    const timeLeft = moment.duration(moment(this.panel.endCountdownTime).diff(now));\n    const formattedTimeLeft = moment.utc(timeLeft.asMilliseconds()).format('HH:mm:ss');\n\n    if (timeLeft.asDays() > 1) {\n      this.time = timeLeft.days() + ' days ' + formattedTimeLeft;\n    } else if (timeLeft.asSeconds() > 0) {\n      this.time = formattedTimeLeft;\n    } else {\n      this.time = '00:00:00';\n    }\n  }\n\n  initEditMode() {\n    super.initEditMode();\n    this.addEditorTab('Options', 'public/plugins/grafana-clock-panel/editor.html', 2);\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}