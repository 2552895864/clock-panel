{"version":3,"sources":["../src/clock_ctrl.js"],"names":[],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport './css/clock-panel.css!';\n\nconst panelDefaults = {\n  mode: 'time',\n  clockType: '24 hour',\n  offsetFromUtc: null,\n  bgColor: null,\n  countdownSettings: {\n    endCountdownTime: moment().seconds(0).milliseconds(0).add(1, 'day').toDate(),\n    endText: '00:00:00'\n  },\n  dateSettings: {\n    showDate: true,\n    dateFormat: 'YYYY-MM-DD',\n    fontSize: '20px',\n    fontWeight: 'normal'\n  },\n  timeSettings: {\n    timeFormat24hr: 'HH:mm:ss',\n    timeFormat12hr: 'h:mm:ss A',\n    fontSize: '60px',\n    fontWeight: 'normal'\n  }\n};\n\nexport class ClockCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    if (!(this.panel.countdownSettings.endCountdownTime instanceof Date)) {\n      this.panel.countdownSettings.endCountdownTime = moment(this.panel.countdownSettings.endCountdownTime).toDate();\n    }\n\n    this.updateClock();\n  }\n\n  updateClock() {\n    if (this.panel.mode === 'time') {\n      this.renderTime();\n    } else {\n      this.renderCountdown();\n    }\n    this.$timeout(() => { this.updateClock(); }, 1000);\n  }\n\n  renderTime() {\n    let now;\n    if (this.panel.offsetFromUtc) {\n      now = moment().utcOffset(parseInt(this.panel.offsetFromUtc, 10));\n    } else {\n      now = moment();\n    }\n\n    if (this.panel.dateSettings.showDate) {\n      this.date = now.format(this.panel.dateSettings.dateFormat);\n    }\n    this.time = this.panel.clockType === '24 hour' ? now.format(this.panel.timeSettings.timeFormat24hr) : now.format(this.panel.timeSettings.timeFormat12hr);\n  }\n\n  renderCountdown() {\n    if (!this.panel.countdownSettings.endCountdownTime) {\n      this.time = this.panel.countdownSettings.endText;\n    }\n\n    const now = moment();\n    const timeLeft = moment.duration(moment(this.panel.countdownSettings.endCountdownTime).diff(now));\n    let formattedTimeLeft = '';\n\n    if (timeLeft.asSeconds() <= 0) {\n      this.time = this.panel.countdownSettings.endText;\n      return;\n    }\n\n    if (timeLeft.years() > 0) {\n      formattedTimeLeft = timeLeft.years() === 1 ? '1 year ' : timeLeft.years() + ' years ';\n    }\n    if (timeLeft.months() > 0) {\n      formattedTimeLeft += timeLeft.months() === 1 ? '1 month ' : timeLeft.months() + ' months ';\n    }\n    if (timeLeft.days() > 0) {\n      formattedTimeLeft += timeLeft.days() === 1 ? '1 day ' : timeLeft.days() + ' days ';\n    }\n\n    formattedTimeLeft += moment.utc(timeLeft.asMilliseconds()).format('HH:mm:ss');\n\n    this.time = formattedTimeLeft;\n  }\n\n  initEditMode() {\n    super.initEditMode();\n    this.addEditorTab('Options', 'public/plugins/grafana-clock-panel/editor.html', 2);\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}