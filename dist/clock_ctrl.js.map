{"version":3,"sources":["../src/clock_ctrl.js"],"names":[],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport './css/clock-panel.css!';\n\nconst panelDefaults = {\n  mode: 'time',\n  clockType: '24 hour',\n  offsetFromUtc: null,\n  offsetFromUtcMinutes: null,\n  bgColor: null,\n  countdownSettings: {\n    endCountdownTime: moment().seconds(0).milliseconds(0).add(1, 'day').toDate(),\n    endText: '00:00:00'\n  },\n  dateSettings: {\n    showDate: false,\n    dateFormat: 'YYYY-MM-DD',\n    fontSize: '20px',\n    fontWeight: 'normal'\n  },\n  timeSettings: {\n    customFormat: 'HH:mm:ss',\n    fontSize: '60px',\n    fontWeight: 'normal'\n  }\n};\n\nexport class ClockCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.timeSettings, panelDefaults.timeSettings);\n\n    if (!(this.panel.countdownSettings.endCountdownTime instanceof Date)) {\n      this.panel.countdownSettings.endCountdownTime = moment(this.panel.countdownSettings.endCountdownTime).toDate();\n    }\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.updateClock();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-clock-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateClock() {\n    if (this.panel.mode === 'time') {\n      this.renderTime();\n    } else {\n      this.renderCountdown();\n    }\n\n    this.nextTickPromise = this.$timeout(this.updateClock.bind(this), 1000);\n  }\n\n  renderTime() {\n    let now;\n\n    if (this.panel.offsetFromUtc && this.panel.offsetFromUtcMinutes) {\n      const offsetInMinutes = (parseInt(this.panel.offsetFromUtc, 10) * 60) + parseInt(this.panel.offsetFromUtcMinutes, 10);\n      now = moment().utcOffset(offsetInMinutes);\n    } else if (this.panel.offsetFromUtc && !this.panel.offsetFromUtcMinutes) {\n      now = moment().utcOffset(parseInt(this.panel.offsetFromUtc, 10));\n    } else {\n      now = moment();\n    }\n\n    if (this.panel.dateSettings.showDate) {\n      this.date = now.format(this.panel.dateSettings.dateFormat);\n    }\n\n    this.time = now.format(this.getTimeFormat());\n  }\n\n  getTimeFormat() {\n    if (this.panel.clockType === '24 hour') {\n      return 'HH:mm:ss';\n    }\n\n    if (this.panel.clockType === '12 hour') {\n      return 'h:mm:ss A';\n    }\n\n    return this.panel.timeSettings.customFormat;\n  }\n\n  renderCountdown() {\n    if (!this.panel.countdownSettings.endCountdownTime) {\n      this.time = this.panel.countdownSettings.endText;\n    }\n\n    const now = moment();\n    const timeLeft = moment.duration(moment(this.panel.countdownSettings.endCountdownTime).diff(now));\n    let formattedTimeLeft = '';\n\n    if (timeLeft.asSeconds() <= 0) {\n      this.time = this.panel.countdownSettings.endText;\n      return;\n    }\n\n    var previous = '';\n\n    if (timeLeft.years() > 0) {\n      formattedTimeLeft = timeLeft.years() === 1 ? '1 year, ' : timeLeft.years() + ' years, ';\n      previous = 'years';\n    }\n    if (timeLeft.months() > 0 || previous === 'years') {\n      formattedTimeLeft += timeLeft.months() === 1 ? '1 month, ' : timeLeft.months() + ' months, ';\n      previous = 'month';\n    }\n    if (timeLeft.days() > 0 || previous === 'months') {\n      formattedTimeLeft += timeLeft.days() === 1 ? '1 day, ' : timeLeft.days() + ' days, ';\n      previous = 'days';\n    }\n    if (timeLeft.hours() > 0 || previous === 'days') {\n      formattedTimeLeft += timeLeft.hours() === 1 ? '1 hour, ' : timeLeft.hours() + ' hours, ';\n      previous = 'hours';\n    }\n\n    if (timeLeft.minutes() > 0 || previous === 'hours') {\n      formattedTimeLeft += timeLeft.minutes() === 1 ? '1 minute, ' : timeLeft.minutes() + ' minutes, ';\n    }\n\n    formattedTimeLeft += timeLeft.seconds() === 1 ? '1 second, ' : timeLeft.seconds() + ' seconds';\n    this.time = formattedTimeLeft;\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}